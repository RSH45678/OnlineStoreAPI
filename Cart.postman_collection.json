{
	"info": {
		"_postman_id": "de49fc23-8d36-4379-a76f-f7937e7a558b",
		"name": "Cart",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46699007",
		"_collection_link": "https://anuradha-9737728.postman.co/workspace/MiniProject_OnlineStoreAPI~5e7ae1dd-064a-4bf4-a2bc-b6b09ba16637/collection/46699007-de49fc23-8d36-4379-a76f-f7937e7a558b?action=share&source=collection_link&creator=46699007"
	},
	"item": [
		{
			"name": "Get all Cart Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\", function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							" //Checking response is an array\r",
							" pm.test(\"Response is an array\", function(){\r",
							"pm.expect(Array.isArray(jsonResponse)).to.be.true;\r",
							" });\r",
							"\r",
							" //Validating response is not empty array\r",
							" pm.test(\"Response array is not empty\", function(){\r",
							"    pm.expect(jsonResponse.length).to.not.equal(0);\r",
							" });\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Cart Item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Collection variable\r",
							"pm.collectionVariables.set(\"cart_id\",\"1\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse=pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    },\r",
							"    \"__v\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\",\r",
							"    \"__v\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							" //Checking response is an object and not empty\r",
							" pm.test(\"Response is an object\", function(){\r",
							"pm.expect(jsonResponse).to.be.a('object').and.not.be.empty;\r",
							" });\r",
							"\r",
							"//validating returned product matches the provided cart ID.\r",
							"pm.test(\"Returned Product matches the provided product id\",function(){\r",
							"    pm.expect(jsonResponse.id).to.be.eql(parseInt(pm.collectionVariables.get(\"cart_id\")));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Limited cart items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Collection variable\r",
							"pm.collectionVariables.set(\"limit\",\"4\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema Validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Checking response is an array\r",
							" pm.test(\"Response is an array\", function(){\r",
							"pm.expect(Array.isArray(jsonResponse)).to.be.true;\r",
							" });\r",
							"\r",
							" //Validating response is not empty array\r",
							" pm.test(\"Response array is not empty\", function(){\r",
							"    pm.expect(jsonResponse.length).to.not.equal(0);\r",
							" });\r",
							"\r",
							"//Validating number of returned cart items matches the limit\r",
							" pm.test(\"Products limit validation\", function(){\r",
							"    pm.expect(jsonResponse.length).to.be.eql(parseInt(pm.collectionVariables.get(\"limit\")))\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?limit={{limit}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "limit",
							"value": "{{limit}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Sorted cart items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//collection variable\r",
							"pm.collectionVariables.set(\"sort\",\"desc\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"\r",
							"//Checking response is an array\r",
							" pm.test(\"Response is an array\", function(){\r",
							"pm.expect(Array.isArray(jsonResponse)).to.be.true;\r",
							" });\r",
							"\r",
							" //Validating response is not empty array\r",
							" pm.test(\"Response array is not empty\", function(){\r",
							"    pm.expect(jsonResponse.length).to.not.equal(0);\r",
							" });\r",
							"\r",
							" // This test will check the sort order if desc is provided then first item should be of id 7 and if asc is provided then id should be 1\r",
							"pm.test(\"validate returned cart items are in sorted order\", function(){\r",
							"    sorting_order = pm.collectionVariables.get(\"sort\");\r",
							"    if(sorting_order == 'desc'){\r",
							"        pm.expect(jsonResponse[0].id).to.be.eql(7)\r",
							"    }else{\r",
							"        pm.expect(jsonResponse[0].id).to.be.eql(1)\r",
							"    };\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?sort={{sort}}",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "sort",
							"value": "{{sort}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get cart items in Date range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    },\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Checking response is an array\r",
							" pm.test(\"Response is an array\", function(){\r",
							"pm.expect(Array.isArray(jsonResponse)).to.be.true;\r",
							" });\r",
							"\r",
							"//Validating response is not empty array\r",
							" pm.test(\"Response array is not empty\", function(){\r",
							"    pm.expect(jsonResponse.length).to.not.equal(0);\r",
							" });\r",
							"\r",
							"//Validate date is within allowed range\r",
							"let startDate= new Date(\"2020-01-01\");\r",
							"let endDate= new Date(\"2020-01-30\");\r",
							"\r",
							"pm.test(\"All cart item dates are within range\", function () {\r",
							"    jsonResponse.forEach(item => {\r",
							"        let itemDate = new Date(item.date);\r",
							"        pm.expect(itemDate >= startDate && itemDate <= endDate).to.be.true;\r",
							"    });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts?startdate=2020-01-01&enddate=2020-01-30",
					"host": [
						"{{base_url}}carts"
					],
					"query": [
						{
							"key": "startdate",
							"value": "2020-01-01"
						},
						{
							"key": "enddate",
							"value": "2020-01-30"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User-specific cart items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//collection variable\r",
							"pm.collectionVariables.set(\"user_id\",\"4\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							" const schema=\r",
							" {\r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"id\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"date\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"products\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            },\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"productId\": {\r",
							"                  \"type\": \"integer\"\r",
							"                },\r",
							"                \"quantity\": {\r",
							"                  \"type\": \"integer\"\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"productId\",\r",
							"                \"quantity\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        },\r",
							"        \"__v\": {\r",
							"          \"type\": \"integer\"\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"id\",\r",
							"        \"userId\",\r",
							"        \"date\",\r",
							"        \"products\",\r",
							"        \"__v\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Jsonschema validation\", function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Checking response is an array\r",
							" pm.test(\"Response is an array\", function(){\r",
							"pm.expect(Array.isArray(jsonResponse)).to.be.true;\r",
							" });\r",
							"\r",
							"//Validating response is not empty array\r",
							" pm.test(\"Response array is not empty\", function(){\r",
							"    pm.expect(jsonResponse.length).to.not.equal(0);\r",
							" });\r",
							"\r",
							"//validating All cart items belong to the specified user.\r",
							"pm.test(\"Returned cart items belong to the specified user\", function () {\r",
							"    let expectedUserId = parseInt(pm.collectionVariables.get(\"user_id\"));\r",
							"\r",
							"    jsonResponse.forEach(item => {\r",
							"        pm.expect(item.userId).to.eql(expectedUserId);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}carts/user/{{user_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"user",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add to cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//collection variables \r",
							"pm.collectionVariables.set(\"date\",\"2020-04-03\");\r",
							"pm.collectionVariables.set(\"product_id\",\"13\");\r",
							"pm.collectionVariables.set(\"quantity\",\"4\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"     pm.response.to.have.status(201);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							" //Checking response is an object and not empty\r",
							" pm.test(\"Response is an object\", function(){\r",
							"pm.expect(jsonResponse).to.be.a('object').and.not.be.empty;\r",
							" });\r",
							"\r",
							"//Returned cart details match the request body.\r",
							"pm.test(\"Expected cart details validation\", function(){\r",
							"    pm.expect(jsonResponse.userId).to.be.eql(parseInt(pm.collectionVariables.get(\"user_id\")));\r",
							"    pm.expect(jsonResponse.date).to.be.eql(pm.collectionVariables.get(\"date\"));\r",
							"\r",
							"    pm.expect(jsonResponse.products).to.be.an(\"array\").that.is.not.empty;\r",
							"\r",
							"    const product = jsonResponse.products[0];\r",
							"\r",
							"    pm.expect(product).to.have.property(\"productId\");\r",
							"    pm.expect(product.productId).to.be.eql(parseInt(pm.collectionVariables.get(\"product_id\")));\r",
							"\r",
							"    pm.expect(product).to.have.property(\"quantity\");\r",
							"    pm.expect(product.quantity).to.be.eql(parseInt(pm.collectionVariables.get(\"quantity\")));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{user_id}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{product_id}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts",
					"host": [
						"{{base_url}}carts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//updating collection variables user_id,date,product_id,quantity\r",
							"pm.collectionVariables.set(\"cart_id\",\"11\");\r",
							"pm.collectionVariables.set(\"user_id\",\"6\");\r",
							"pm.collectionVariables.set(\"date\",\"2020-05-06\");\r",
							"pm.collectionVariables.set(\"product_id\",\"10\");\r",
							"pm.collectionVariables.set(\"quantity\",\"8\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"userId\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"productId\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"productId\",\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"userId\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\",function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Checking response is an object and not empty\r",
							" pm.test(\"Response is an object\", function(){\r",
							"pm.expect(jsonResponse).to.be.a('object').and.not.be.empty;\r",
							" });\r",
							"\r",
							"//Returned cart details match the request body\r",
							"pm.test(\"Expected cart details validation\", function(){\r",
							"    pm.expect(jsonResponse.userId).to.be.eql(parseInt(pm.collectionVariables.get(\"user_id\")));\r",
							"    pm.expect(jsonResponse.date).to.be.eql(pm.collectionVariables.get(\"date\"));\r",
							"\r",
							"    pm.expect(jsonResponse.products).to.be.an(\"array\").that.is.not.empty;\r",
							"\r",
							"    const product = jsonResponse.products[0];\r",
							"    \r",
							"    pm.expect(product.productId).to.be.eql(parseInt(pm.collectionVariables.get(\"product_id\")));\r",
							"    pm.expect(product.quantity).to.be.eql(parseInt(pm.collectionVariables.get(\"quantity\")));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\":{{user_id}},\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"productId\":{{product_id}},\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//updating collection variables date and quantity for partially updating cart\r",
							"pm.collectionVariables.set(\"cart_id\",\"11\");\r",
							"pm.collectionVariables.set(\"date\",\"2020-09-06\");\r",
							"pm.collectionVariables.set(\"quantity\",\"3\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse= pm.response.json();\r",
							"\r",
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							" });\r",
							"\r",
							"const schema=\r",
							"{\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"date\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"products\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"quantity\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"quantity\"\r",
							"          ]\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"date\",\r",
							"    \"products\"\r",
							"  ]\r",
							"}\r",
							"pm.test(\"Json schema validation\", function(){\r",
							"pm.expect(jsonResponse).to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Checking response is an object and not empty\r",
							" pm.test(\"Response is an object\", function(){\r",
							"pm.expect(jsonResponse).to.be.a('object').and.not.be.empty;\r",
							" });\r",
							"\r",
							"//Updated fields match the request body\r",
							"pm.test(\"Updated cart details validation\", function(){\r",
							"    pm.expect(jsonResponse.date).to.be.eql(pm.collectionVariables.get(\"date\"));\r",
							"\r",
							"    pm.expect(jsonResponse.products).to.be.an(\"array\").that.is.not.empty;\r",
							"\r",
							"    const product = jsonResponse.products[0];\r",
							"    pm.expect(product.quantity).to.be.eql(parseInt(pm.collectionVariables.get(\"quantity\")));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\":\"{{date}}\",\r\n    \"products\":\r\n    [\r\n        {\r\n            \"quantity\":{{quantity}}\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"cart_id\",\"11\");"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//validating successful response code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"     pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}carts/{{cart_id}}",
					"host": [
						"{{base_url}}carts"
					],
					"path": [
						"{{cart_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "cart_id",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "quantity",
			"value": ""
		},
		{
			"key": "limit",
			"value": ""
		},
		{
			"key": "sort",
			"value": ""
		},
		{
			"key": "product_id",
			"value": ""
		},
		{
			"key": "date",
			"value": "",
			"type": "default"
		}
	]
}